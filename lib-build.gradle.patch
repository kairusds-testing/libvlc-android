55c55
<         //Custom APK name
---
>         //Custom library name
60a61,101
> 
>         def javadocTask = project.tasks.create("generate${variant.name.capitalize()}Javadoc", Javadoc) {
>             title "API Documentation (${project.android.defaultConfig.versionName})"
>             group "ApiDoc"
>             description "Generates Javadoc for $variant.name."
>             source = variant.sourceSets.collect { it.java.sourceFiles }.inject { m, i -> m + i }
>     
>             // To fix issue: Error: Can not create variant 'android-lint' after configuration ': library: debugRuntimeElements' has been resolved    
>             doFirst {
>                 classpath = project.files(variant.javaCompileProvider.get().classpath.files,
>                     project.android.getBootClasspath())
>             }
>     
>             if(JavaVersion.current().isJava8Compatible()) {
>                 options.addStringOption('Xdoclint:none', '-quiet')
>             }
>     
>             exclude "**/R"
>             exclude "**/R.**"
>             exclude "**/R\$**"
>             exclude "**/BuildConfig*"
>     
>             if (JavaVersion.current().isJava8Compatible()) {
>                 options.addStringOption('Xdoclint:none', '-quiet')
>             }
>     
>             options.windowTitle = "API Documentation (${project.android.defaultConfig.versionName})"
>             options.memberLevel = JavadocMemberLevel.PROTECTED
>             options.linkSource false
>             options.author = false
>     
>             failOnError true
>         }
>     
>         javadocTask.dependsOn "assemble${variant.name.capitalize()}"
>         generateApiDoc.dependsOn javadocTask
>     }
> 
>     task generateApiDoc() {
>         group "reporting"
>         description "Generates Javadoc."
